<?php

namespace App\Models;

use App\User;
use Illuminate\Database\Eloquent\Model;

class Order extends Model
{
    protected $fillable = [
        'address', 'closed', 'reviewed', 'paid_at', 'payment_no', 'no', 'payment_method',
        'refund_status', 'refund_no', 'total_price'
    ];
    protected $casts = [
        'address' => 'array'
    ];
    const REFUND_STATUS_PENDING = 'pending';
    const SHIP_STATUS_PENDING = 'pending';
    const SHIP_STATUS_DELIVERED = 'delivered';
    const SHIP_STATUS_RECEIVED = 'received';

    public static $shipStatusMap = [
        self::SHIP_STATUS_DELIVERED => '已发货',
        self::SHIP_STATUS_PENDING => '未发货',
        self::SHIP_STATUS_RECEIVED => '已收货',
    ];

    public static $refundStatusMap = [
        self::REFUND_STATUS_PENDING => '未退款'
    ];

    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub
        static::creating(function ($model) {
            if (!$model->no) {
                $model->no = self::createAvailableOrderNo();
                if (!$model->no) {
                    return false;
                }
            }
        });
    }

    private static function createAvailableOrderNo()
    {
        $prefix = date('YmdHis');

        for ($i = 0; $i < 30; $i++) {
            $no = $prefix . random_int(111, 999);
            if (!self::query()->where('no', $no)->exists()) {
                return $no;
            }
        }
        return false;
    }

    public function items()
    {
        return $this->hasMany(OrderItem::class, 'order_id', 'id');
    }

    public function user()
    {
        return $this->belongsTo(User::class, 'user_id', 'id');
    }

    public function getOrderStatusAttribute()
    {
        if ($this->paid_at) {
            return '已支付';
        } elseif ($this->closed) {
            return '订单已关闭';
        } else {
            return '未付款';
        }
    }
}
